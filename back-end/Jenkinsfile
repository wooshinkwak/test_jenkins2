pipeline {
    agent any

    tools{
        maven 'Maven'//젠킨스 tools의 설정한 Maven 이름
    }

    environment{
        JAVA_HOME = 'D:\\dev\\java-11-openjdk-11.0.15.9-1' //자바가 설치된 경로
        PATH = "${env.JAVA_HOME}\\bin;${env.PATH}"
    }

    // trigger{
    //     pollSCM('H/6 * * * 1-5')
    // }

    stages {
        stage('clone repository') {
            steps {
	         git branch:'main',credentialsId:'github-token', 
                        url:'https://github.com/wooshinkwak/test_jenkins2.git'
	        }
        }

        stage('build WAR'){
            steps{
                script{
                    def mvnHome = tool name:'Maven', type:'hudson.tasks.Maven$MavenInstallation'
                    withEnv(["MAVEN_HOME=${mvnHome}"] ){
                        //pom.xml에 version노드의 이름으로 war가 targit 디렉토리에 생성된다.
                        bat "\"${mvnHome}\\bin\\mvn\" clean package -DskipTests"
                    }
                }
            }
        }

        stage('Copy WAR') {
            steps {
                script {
                    def warFile = 'target\\sist-1.0.0-BUILD-SNAPSHOT.war'
                    def destDir = 'd:\\test_docker'
                    bat """
                    if not exist ${destDir} mkdir ${destDir}
                    copy ${warFile} ${destDir}\\test_jenkins.war
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Dockerfile이 있는 디렉토리로 이동
                    dir('d:\\test_docker') {
                        def app = docker.build("test_jenkins_image")
                    }
                }
            }
        }
        stage('Run Docker Image') {
            steps {
                script {
                    // Docker 이미지 실행
                    docker.image("test_jenkins_image").run("-p 80:8080")
                }
            }
        }

    }


}
